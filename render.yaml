# Render deployment configuration - RECOMMENDED VERSION

services:
  # Backend API Service
  - type: web
    name: chat-app-backend
    env: docker
    repo: https://github.com/krunchontu/chat-app-socket.io
    dockerfilePath: ./server/Dockerfile
    dockerContext: ./server
    plan: free
    healthCheckPath: /
    # Added resource limits to prevent unexpected costs
    resources:
      cpu: 0.25
      memory: 512MB
    # Added a pre-deploy command for database migrations if needed
    # preDeployCommand: npm run db:migrate
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 4500
      - key: JWT_SECRET
        sync: false
        description: "Secret key for JWT token generation"
      - key: MONGO_URI
        sync: false
        description: "MongoDB Atlas connection string"
      - key: NEW_RELIC_LICENSE_KEY
        sync: false
        description: "New Relic license key for APM"
      - key: LOGDNA_KEY
        sync: false
        description: "LogDNA ingestion key for centralized logging"
      - key: CLIENT_ORIGIN
        fromService:
          name: chat-app-frontend
          type: web
          property: hostport
      # Added socket.io specific config
      - key: SOCKET_TRANSPORTS
        value: "websocket, polling"
    autoDeploy: true

  # Frontend Static Site
  - type: web
    name: chat-app-frontend
    env: docker
    repo: https://github.com/krunchontu/chat-app-socket.io
    dockerfilePath: ./chat/Dockerfile
    dockerContext: ./chat
    plan: free
    # Added health check path for frontend
    healthCheckPath: /
    # Added resource limits to prevent unexpected costs
    resources:
      cpu: 0.25
      memory: 512MB
    envVars:
      - key: REACT_APP_API_URL
        fromService:
          name: chat-app-backend
          type: web
          property: hostport
      - key: REACT_APP_SOCKET_URL
        fromService:
          name: chat-app-backend
          type: web
          property: hostport
      # Added build-time environment variable
      - key: REACT_APP_VERSION
        value: "1.0.0"
      # Added cache control hints
      - key: REACT_APP_CACHE_CONTROL
        value: "max-age=3600"
    autoDeploy: true

# MongoDB (external)
# Note: MongoDB should be set up as an external database
# Recommended to use MongoDB Atlas for production
# Uncomment below to use Render managed PostgreSQL instead
databases:
  # - name: chat-app-db
  #   plan: free
  #   databaseName: chatapp
  #   user: chatapp_user

# Optional: Add persistent disk for file uploads
# disks:
#   - name: chat-app-uploads
#     mountPath: /data/uploads
#     sizeGB: 10

# Custom domain setup
# routes:
#   - type: redirect
#     source: www.yourdomain.com/*
#     destination: yourdomain.com/$1
